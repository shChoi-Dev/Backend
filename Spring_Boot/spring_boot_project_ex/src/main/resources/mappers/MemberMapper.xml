<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring_boot.projectEx.dao.IMemberDAO">
	
	<!-- id pwd가 일치하면 memID 반환 
	<select id="loginCheck" parameterType="hashmap" resultType="string">
		SELECT memId FROM member WHERE memId=#{id} AND memPwd=#{pwd}
	</select>
	-->
	
	<!-- 비밀번호가 암호화 된 경우 로그인 체크 -->
	<select id="loginCheck" parameterType="String" resultType="string">
		SELECT memPwd FROM member WHERE memId=#{id}
	</select>
	
	<!-- id 중복 체크 -->
	<select id="idCheck" parameterType="string" resultType="string">
		SELECT memId FROM member WHERE memId=#{id}
	</select>
	
	<!-- 회원등록 -->
	<insert id="insertMember" parameterType="com.spring_boot.projectEx.model.MemberVO">
		INSERT INTO member (memId, memPwd, memName, memEmail, memHp, 
								memZipcode, memAddress1, memAddress2)
    	VALUES (#{memId}, #{memPwd}, #{memName}, #{memEmail}, #{memHp}, 
    			#{memZipcode}, #{memAddress1}, #{memAddress2})
	</insert>
	
	<!-- 회원 정보 조회 -->
	<select id="getMemberInfo" parameterType="string" resultType="com.spring_boot.projectEx.model.MemberVO">
    	SELECT * FROM member WHERE memId=#{memId}
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="com.spring_boot.projectEx.model.MemberVO">
	    UPDATE member
	    SET 
	        memName = #{memName},
	        memEmail = #{memEmail},
	        memHP = #{memHP},
	        memZipcode = #{memZipcode},
	        memAddress1 = #{memAddress1},
	        memAddress2 = #{memAddress2}
	    <if test="memPwd != null and memPwd != ''">
	        , memPwd = #{memPwd}
	    </if>
	    WHERE memId = #{memId}
	</update>
	
	<delete id="deleteMember" parameterType="string">
    	DELETE FROM member WHERE memId = #{memId}
	</delete>
	
	
</mapper>