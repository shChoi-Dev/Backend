<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- 아래 mapper에서 구현되는 기능은 IBookDAO 추상 메소드로 한정 됨-->
  <mapper namespace="com.spring_boot_mybatis.ex.dao.IBookDAO">
  
  <!-- resultMap 구성 : 반환되는 rs의 컬럼과 저장해야하는 vo 클래스의 필드명을 매핑하는 역할 -->
  <resultMap id="bookResult" type="BookVO">
	 	<result property="bookNo" column="bookNo"/>
	 	<result property="bookName" column="bookName"/>
	 	<result property="bookAuthor" column="bookAuthor"/>
	 	<result property="bookPrice" column="bookPrice"/>
	 	<result property="bookDate" column="bookDate"/>
	 	<result property="bookStock" column="bookStock"/>
	 	<result property="pubNo" column="pubNo"/>
	 </resultMap>
	 
	<!-- 전체 도서 정보 출력 --> 
	<select id="listAllBook" resultMap="bookResult">
		Select * FROM book ORDER BY bookNo
	</select>
	
	<!-- 도서 정보 추가 -->
	<insert id="insertBook" parameterType="BookVO">
		INSERT INTO book (bookNo, bookName, bookAuthor, bookPrice, bookDate, bookStock, pubNo)
		VALUES (#{bookNo}, #{bookName}, #{bookAuthor}, #{bookPrice}, #{bookDate}, #{bookStock}, #{pubNo}) 
	</insert>
	
	<!-- 도서 상세정보 조회 -->
	<select id="detailViewBook" parameterType="string" resultType="BookVO">
		SELECT * FROM book WHERE bookNo= #{bookNo}
	</select>
	
	<!-- 도서 정보 수정 -->
	<update id="updateBook" parameterType="BookVO">
		UPDATE book SET bookName=#{bookName}, bookAuthor=#{bookAuthor}, bookPrice=#{bookPrice}, 
						bookDate=#{bookDate}, bookStock=#{bookStock}, pubNo=#{pubNo}
		WHERE bookNo=#{bookNo}
	</update>
	
	<!-- 도서 정보 삭제 -->
	<delete id="deleteBook" parameterType="string">
		DELETE FROM book where bookNo=#{bookNo}	
	</delete>
	
	<!-- 도서 번호 중복 확인 -->
	<select id="bookNoCheck" resultType="string" parameterType="string">
		SELECT bookNo FROM book WHERE bookNo=#{bookNo}
	</select>
	
	<!-- 도서 검색 -->
	<select id="bookSearch" parameterType="hashmap" resultMap="bookResult">
		SELECT * FROM book WHERE
			<choose>
				<when test="type != null and type.equals('bookName')">
					bookName LIKE '%'||#{keyword}||'%'
				</when>
				<when test="type != null and type.equals('pubNo')">
					pubNo LIKE '%'||#{keyword}||'%'
				</when>
			</choose> 
	</select>
	
</mapper>