<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- myBatis에서는 현재 xml 문서가 Mapper의 역할을 한다는 정의와
	Mapper 태그의 문법을 정의하기위한 DTD 정보를 요구함
	Mapper 문서에서는 반드시 Mapper를 표현하는 dtd 정보를 표현해야 함 -->
	
<!-- 아래 mapper에서 구현되는 기능은 IProductDAO 추상 메소드로 한정 됨-->
<mapper namespace="com.spring_mvc.mybatis.dao.IProductDAO">
	<!-- 전체 상품 조회 : select -->
	<!-- 태그 관련 속성 : id = 태그 고유 식별자(id가 추상메소드 명과 동일해야 함)
						  parameterType= 쿼리에 전달할 파라미터 객체의 타입을 지정
						  resultType= 반환결과가 필요한 경우 자바 객체의 타입 지정
						  resultMap= 결과를 매핑하기 위한 외부 결과 맵 참조(개발자가 구성해야 함)
						  statementType= stmt 객체 유형 지정(기본값 prepared)
	
	
	 -->
	 <!-- resultMap 구성 : 반환되는 rs의 컬럼과 저장해야하는 vo 클래스의 필드명을 매핑하는 역할 -->
	 <resultMap id="prdResult" type="com.spring_mvc.mybatis.model.ProductVO">
	 	<result property="prdNo" column="prdNo"/>
	 	<result property="prdName" column="prdName"/>
	 	<result property="prdPrice" column="prdPrice"/>
	 	<result property="prdCompany" column="prdCompany"/>
	 	<result property="prdStock" column="prdStock"/>
	 	<result property="prdDate" column="prdDate"/>
	 </resultMap>
	 
	 <!-- db에서 반환되는 rs set이 0개 이상임 : 한개의 vo에 레코드를 저장하고 vo를 collection에 저장해야 함
	 	  collection 구성은 자동 진행함
	<select id="listAllProduct" resultMap="com.spring_mvc.mybatis.model.ProductVO">
		Select * FROM product ORDER BY prdNo
	</select>-->
	
	<select id="listAllProduct" resultMap="prdResult">
		Select * FROM product ORDER BY prdNo
	</select>
	
	<!-- 변수자리에 사용할 수 있는 기호 : #{필드명/변수명}, ${필드명/변수명}
		 #{} : preparedstatement의 ?
		 ${} : statement의 변수
	 -->
	<insert id="insertProduct" parameterType="com.spring_mvc.mybatis.model.ProductVO">
		INSERT INTO product (prdNo, prdName, prdPrice, prdCompany, prdStock, prdDate)
		VALUES (#{prdNo}, #{prdName}, #{prdPrice}, #{prdCompany}, #{prdStock}, #{prdDate}) 
	</insert>
	
	<!-- 상품 상세정보 조회 -->
	<select id="detailViewProduct" parameterType="string" resultType="com.spring_mvc.mybatis.model.ProductVO">
		SELECT * FROM product WHERE prdNo= #{prdNo}
	</select>
	
	<!-- 상품 정보 수정 -->
	<update id="updateProduct" parameterType="com.spring_mvc.mybatis.model.ProductVO">
		UPDATE product SET prdName=#{prdName}, prdPrice=#{prdPrice}, prdCompany=#{prdCompany}, prdStock=#{prdStock},
						   prdDate=#{prdDate}
		WHERE prdNo=#{prdNo} 
	</update>
	
	<!-- 상품 정보 삭제 -->
	<delete id="deleteProduct" parameterType="string">
		DELETE FROM product where prdNo=#{prdNo}	
	</delete>
	
	<!-- 상품 번호 중복 확인 -->
	<select id="prdNoCheck" resultType="string" parameterType="string">
		SELECT prdNo FROM product WHERE prdNo=#{prdNo}
	</select>
	
	<!-- 상품 검색
		검색기준 : type:prdName, type:prdCompany
			if 문을 표현하는 mybatis 태그 <choose><when>
		검색어 : keyword : 사용자 입력값
	 -->
	<select id="productSearch" parameterType="hashmap" resultMap="prdResult">
		SELECT * FROM product WHERE
			<choose>
				<when test="type != null and type.equals('prdName')">
					prdName LIKE '%'||#{keyword}||'%'
				</when>
				<when test="type != null and type.equals('prdName')">
					prdCompany LIKE '%'||#{keyword}||'%'
				</when>
			</choose> 
	</select>
</mapper>
